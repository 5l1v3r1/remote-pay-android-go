group = 'com.clover.sdk'
version = '1.4.0-SNAPSHOT'

apply plugin: 'com.android.library'
apply plugin: 'android-maven'
apply plugin: 'realm-android'


repositories {
    mavenLocal()
//  maven { url "http://artifactory.corp.clover.com:8081/artifactory/repo" }
//  maven { url "http://artifactory.corp.clover.com:8081/artifactory/libs-release" }
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    jcenter()
}

android {
    lintOptions {
        abortOnError false
    }
    compileSdkVersion 21
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 21
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}
defaultTasks 'install'

dependencies {

//  compile 'com.clover:clover-remote-interface:214-SNAPSHOT'
    compile project(':clover-remote-interface')
//  compile 'com.clover.sdk:clover-android-sdk:184-SNAPSHOT'
    compile project(':clover-android-sdk')

    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.neovisionaries:nv-websocket-client:1.31'
    testCompile 'junit:junit:4.12'
//CloverGo Depenencies
    compile 'com.google.android.gms:play-services-gcm:10.2.6'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.9'
    compile "com.firstdata.clovergo:data:$cloverGoSDKVersion-SNAPSHOT@aar"
    compile 'com.squareup.okhttp3:okhttp:3.5.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-jackson:2.1.0'
    compile "com.firstdata.clovergo:domain:$cloverGoSDKVersion-SNAPSHOT"
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    compile 'io.reactivex.rxjava2:rxjava:2.0.6'
    compile 'com.google.dagger:dagger:2.9'
    compile "com.firstdata.clovergo:reader:$cloverGoSDKVersion-SNAPSHOT@aar"
    compile project(':roam')
}

apply plugin: 'signing'

task androidJavadocs(type: Javadoc, dependsOn: 'assembleRelease') {
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompile.classpath
        }
    }
    source = android.sourceSets.main.java.srcDirs

    include '**/CloverGoConnector.java', '**/DefaultCloverGoConnector.java', '**/ICloverGoConnector.java',
            '**/ICloverConnector.java', '**/ReaderInfo.java', '**/CloverGoDeviceConfiguration.java',
            '**/SaleRequest.java', '**/com/clover/sdk/v3/payments/Payment.java', '**/Challenge.java',
            '**/AuthRequest.java', '**/PreAuthRequest.java', '**/TipAdjustAuthRequest.java',
            '**/CapturePreAuthRequest.java', '**/VoidPaymentRequest.java', '**/RefundPaymentRequest.java',
            '**/CloseoutRequest.java', '**/ICloverGoConnectorListener.java'

    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

/*
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "${upload_release_url}") {
              authentication(userName: "${upload_user}", password: "${upload_password}")
            }
            snapshotRepository(url: "${upload_snapshot_url}") {
              authentication(userName: "${upload_user}", password: "${upload_password}")
            }

            pom.project {
                name 'Clover Connector Android library'
                description 'Clover Connector Android library'
                url 'http://www.clover.com/'

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0'
                        distribution 'repo'
                    }
                }

                scm {
                    url "https://github.com/clover/remote-pay-android"
                    connection "https://github.com/clover/remote-pay-android.git"
                    developerConnection "git@github.com:clover/remote-pay-android.git"
                }

                developers {
                    developer {
                        name 'Clover Engineering Team'
                        url 'https://www.clover.com/team'
                    }
                }
            }
        }
    }
}
*/

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
}

signing {
    required = { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}
/*
nexusStaging {
  packageGroup = "com.clover" //optional if packageGroup == project.getGroup() ------>  NOTE: project.getGroup() returns com.clover.sdk
}
*/